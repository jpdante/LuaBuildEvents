; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "LuaBuildEvents"
#define MyAppVersion "1.3.3"
#define MyAppPublisher "jpdante"
#define MyAppURL "https://github.com/jpdante/LuaBuildEvents"
#define MyAppExeName "LuaBuildEvents.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{37F0AF46-8F16-486B-82D8-EB7B655C9F00}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=C:\Users\jpdante\Desktop
OutputBaseFilename=lbe-setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ChangesEnvironment=true

[Code]
const EnvironmentKey = 'SYSTEM\CurrentControlSet\Control\Session Manager\Environment';

procedure EnvAddPath(Path: string);
var
    Paths: string;
begin
    { Retrieve current path (use empty string if entry not exists) }
    if not RegQueryStringValue(HKEY_LOCAL_MACHINE, EnvironmentKey, 'Path', Paths)
    then Paths := '';

    { Skip if string already found in path }
    if Pos(';' + Uppercase(Path) + ';', ';' + Uppercase(Paths) + ';') > 0 then exit;

    { App string to the end of the path variable }
    Paths := Paths + ';'+ Path +';'

    { Overwrite (or create if missing) path environment variable }
    if RegWriteStringValue(HKEY_LOCAL_MACHINE, EnvironmentKey, 'Path', Paths)
    then Log(Format('The [%s] added to PATH: [%s]', [Path, Paths]))
    else Log(Format('Error while adding the [%s] to PATH: [%s]', [Path, Paths]));
end;

procedure EnvRemovePath(Path: string);
var
    Paths: string;
    P: Integer;
begin
    { Skip if registry entry not exists }
    if not RegQueryStringValue(HKEY_LOCAL_MACHINE, EnvironmentKey, 'Path', Paths) then
        exit;

    { Skip if string not found in path }
    P := Pos(';' + Uppercase(Path) + ';', ';' + Uppercase(Paths) + ';');
    if P = 0 then exit;

    { Update path variable }
    Delete(Paths, P - 1, Length(Path) + 1);

    { Overwrite path environment variable }
    if RegWriteStringValue(HKEY_LOCAL_MACHINE, EnvironmentKey, 'Path', Paths)
    then Log(Format('The [%s] removed from PATH: [%s]', [Path, Paths]))
    else Log(Format('Error while removing the [%s] from PATH: [%s]', [Path, Paths]));
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
    if CurStep = ssPostInstall 
     then EnvAddPath(ExpandConstant('{app}') +'\bin');
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
    if CurUninstallStep = usPostUninstall
    then EnvRemovePath(ExpandConstant('{app}') +'\bin');
end;

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"

[Files]
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\publish-windows-x64\LuaBuildEvents.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\FluentFTP.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\LuaBuildEvents.FTP.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\LuaBuildEvents.MySql.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\LuaBuildEvents.SSH.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\MySqlConnector.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\Renci.SshNet.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\SshNet.Security.Cryptography.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\jpdante\Documents\GitHub\LuaBuildEvents\LuaBuildEvents\bin\Debug\netcoreapp3.1\System.Xml.XPath.XmlDocument.dll"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

